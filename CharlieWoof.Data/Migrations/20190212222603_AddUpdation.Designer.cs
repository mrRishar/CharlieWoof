// <auto-generated />
using System;
using CharlieWoof.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CharlieWoof.Data.Migrations
{
    [DbContext(typeof(CWDataContext))]
    [Migration("20190212222603_AddUpdation")]
    partial class AddUpdation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview2-35157")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CharlieWoof.Core.Models.MagicPackage.HistoricalMagicPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<bool>("IsDeleted");

                    b.Property<Guid>("MagicPageId");

                    b.Property<string>("SeoDescription")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("SeoKeywords")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("SeoTitle")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.Property<Guid>("UpdatedByUserId");

                    b.Property<DateTime>("UpdatedOnUtc")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("MagicPageId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("HistoricalMagicPages");
                });

            modelBuilder.Entity("CharlieWoof.Core.Models.MagicPackage.MagicContentItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime");

                    b.Property<string>("Css")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted");

                    b.Property<Guid>("MagicPageId");

                    b.Property<int>("SortNumder");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<Guid>("UpdatedByUserId");

                    b.Property<DateTime>("UpdatedOnUtc")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("MagicPageId");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("MagicContentItems");
                });

            modelBuilder.Entity("CharlieWoof.Core.Models.MagicPackage.MagicFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime");

                    b.Property<byte>("EmagicFileType");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.Property<Guid>("UpdatedByUserId");

                    b.Property<DateTime>("UpdatedOnUtc")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("MagicFiles");
                });

            modelBuilder.Entity("CharlieWoof.Core.Models.MagicPackage.MagicPage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("SeoDescription")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("SeoKeywords")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("SeoTitle")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint");

                    b.Property<Guid>("UpdatedByUserId");

                    b.Property<DateTime>("UpdatedOnUtc")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("MagicPages");
                });

            modelBuilder.Entity("CharlieWoof.Core.Models.Setting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("Type");

                    b.Property<Guid>("UpdatedByUserId");

                    b.Property<DateTime>("UpdatedOnUtc")
                        .HasColumnType("datetime");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("CharlieWoof.Core.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("Phone");

                    b.Property<string>("PhotoUrl");

                    b.Property<byte>("Role")
                        .HasColumnType("tinyint");

                    b.Property<string>("Secondname");

                    b.Property<Guid>("UpdatedByUserId");

                    b.Property<DateTime>("UpdatedOnUtc")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("UpdatedByUserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CharlieWoof.Core.Models.MagicPackage.HistoricalMagicPage", b =>
                {
                    b.HasOne("CharlieWoof.Core.Models.MagicPackage.MagicPage", "MagicPage")
                        .WithMany("HistoricalMagicPages")
                        .HasForeignKey("MagicPageId")
                        .HasConstraintName("FK_HistoricalMagicPages_MagicPages");
                });

            modelBuilder.Entity("CharlieWoof.Core.Models.MagicPackage.MagicContentItem", b =>
                {
                    b.HasOne("CharlieWoof.Core.Models.MagicPackage.MagicPage")
                        .WithMany("MagicContentItems")
                        .HasForeignKey("MagicPageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CharlieWoof.Core.Models.MagicPackage.MagicFile", b =>
                {
                    b.HasOne("CharlieWoof.Core.Models.User", "UpdatedByUser")
                        .WithMany()
                        .HasForeignKey("UpdatedByUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
